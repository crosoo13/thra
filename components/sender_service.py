# components/sender_service.py

from . import database_manager as db

async def send_pending_messages(client):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—á–µ—Ä–µ–¥—å –≤ Supabase –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–µ, –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
    
    –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª—é–±–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º,
    —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–æ—Ç –∂–µ –¥–µ–Ω—å.
    """
    print("\n--- üì¨ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É ---")
    
    pending_actions = db.get_pending_actions()  
    
    if not pending_actions:
        print("‚úÖ –û—á–µ—Ä–µ–¥—å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –ø—É—Å—Ç–∞.")
        print("-" * 50)
        return

    print(f"üì• –ù–∞–π–¥–µ–Ω–æ {len(pending_actions)} –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.")
    
    successful_sends = 0
    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É –¥–µ–π—Å—Ç–≤–∏—é
    for action in pending_actions:
        action_id = action.get('id')
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø–∏—Å–∏
            action_type = action.get('action_type', 'reply') # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'reply' –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            
            # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ —Ç–µ–∫—Å—Ç
            if action_type == 'lead_outreach':
                # –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–∫—É –ª–∏–¥—É
                target_user_id = action.get('lead_user_id')
                message_text = action.get('pitch_text')
                # –î–ª—è –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π entity - —ç—Ç–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                entity_to_send = int(target_user_id) if target_user_id else None
                reply_to_id = None # –í –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ —á—Ç–æ-—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ
                print(f"  -> –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ª–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (lead_outreach) –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_id}...")
            else: # action_type == 'reply' –∏–ª–∏ 'keyword_alert'
                # –≠—Ç–æ –æ—Ç–≤–µ—Ç –≤ –ø—É–±–ª–∏—á–Ω–æ–º —á–∞—Ç–µ
                target_user_id = action.get('target_user_id')
                chat_id = action.get('target_chat_id')
                message_text = action.get('message_text')
                reply_to_id = action.get('reply_to_message_id')
                entity_to_send = int(chat_id) if chat_id else None
                print(f"  -> –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ (reply) –≤ —á–∞—Ç {chat_id}...")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –º–µ—Å—Ç–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
            if not all([entity_to_send, message_text]):
                 print(f"      ‚ùå –ü—Ä–æ–ø—É—Å–∫ action_id: {action_id}. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö (ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏–ª–∏ —Ç–µ–∫—Å—Ç).")
                 continue
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∏–µ–Ω—Ç Telethon –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            await client.send_message(
                entity=entity_to_send,
                message=message_text,
                reply_to=int(reply_to_id) if reply_to_id else None
            )
            
            # –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞, –ø–æ–º–µ—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ
            db.mark_action_as_completed(action_id)
            print(f"      ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ó–∞–ø–∏—Å—å {action_id} –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è.")
            successful_sends += 1

            # --- –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ë–õ–û–ö –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø ---
            # 1. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º, —á—Ç–æ –º—ã —Å–≤—è–∑–∞–ª–∏—Å—å —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å–µ–≥–æ–¥–Ω—è
            if target_user_id:
                db.record_user_contact(int(target_user_id))

            # 2. –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ *–ø—É–±–ª–∏—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞* –≤ —á–∞—Ç–µ, —á—Ç–æ–±—ã —Å–æ–±–ª—é–¥–∞—Ç—å —á–∞—Å–æ–≤–æ–π –ª–∏–º–∏—Ç
            if action_type == 'reply':
                db.update_last_post_time(int(action.get('target_chat_id')))
            # --- –ö–û–ù–ï–¶ –û–ë–ù–û–í–õ–ï–ù–ù–û–ì–û –ë–õ–û–ö–ê ---

        except TypeError as e:
            print(f"      ‚ùå –û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è action_id: {action_id}. –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–≤–µ—Ä–Ω—ã–π ID. –û—à–∏–±–∫–∞: {e}")
            # –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø–æ–º–µ—Ç–∏—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –∫–∞–∫ –æ—à–∏–±–æ—á–Ω–æ–µ –≤ –ë–î
        except Exception as e:
            print(f"      ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ action_id: {action_id}. –û—à–∏–±–∫–∞: {e}")
            # –û—Å—Ç–∞–≤–ª—è–µ–º is_completed = false –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑
            
    print(f"\n--- ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£—Å–ø–µ—à–Ω–æ: {successful_sends} –∏–∑ {len(pending_actions)} ---")
    print("-" * 50)