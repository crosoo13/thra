# components/sender_service.py

from . import database_manager as db

async def send_pending_messages(client):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—á–µ—Ä–µ–¥—å –≤ Supabase –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–µ, –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
    
    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è:
    1. –ü–æ–ª—É—á–∞–µ—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º is_completed = false.
    2. –ò—Ç–µ—Ä–∏—Ä—É–µ—Ç—Å—è –ø–æ –Ω–∏–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telethon.
    3. –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ is_completed = true.
    4. –õ–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ —É—Å–ø–µ—Ö–∏ –∏ –æ—à–∏–±–∫–∏.
    """
    print("\n--- üì¨ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É ---")
    
    # 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    pending_actions = db.get_pending_actions() 
    
    if not pending_actions:
        print("‚úÖ –û—á–µ—Ä–µ–¥—å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –ø—É—Å—Ç–∞.")
        print("-" * 50)
        return

    print(f"üì• –ù–∞–π–¥–µ–Ω–æ {len(pending_actions)} —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
    
    successful_sends = 0
    # 2. –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É –¥–µ–π—Å—Ç–≤–∏—é
    for action in pending_actions:
        action_id = action.get('id')
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø–∏—Å–∏
            chat_id = action['target_chat_id']
            reply_to_id = action['reply_to_message_id']
            message_text = action['message_text']
            
            print(f"  -> –û—Ç–ø—Ä–∞–≤–∫–∞ action_id: {action_id} –≤ —á–∞—Ç {chat_id}...")
            
            # 3. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∏–µ–Ω—Ç Telethon –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            await client.send_message(
                entity=int(chat_id),       # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ ID —á–∞—Ç–∞ - —ç—Ç–æ —á–∏—Å–ª–æ
                message=message_text,
                reply_to=int(reply_to_id)  # –ò ID –¥–ª—è –æ—Ç–≤–µ—Ç–∞ —Ç–æ–∂–µ
            )
            
            # 4. –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞, –ø–æ–º–µ—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ
            db.mark_action_as_completed(action_id)
            print(f"     ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ó–∞–ø–∏—Å—å {action_id} –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è.")
            successful_sends += 1

        except TypeError as e:
            print(f"     ‚ùå –û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è action_id: {action_id}. –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–≤–µ—Ä–Ω—ã–π ID —á–∞—Ç–∞ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. –û—à–∏–±–∫–∞: {e}")
            # –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø–æ–º–µ—Ç–∏—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –∫–∞–∫ –æ—à–∏–±–æ—á–Ω–æ–µ –≤ –ë–î
        except Exception as e:
            print(f"     ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ action_id: {action_id}. –û—à–∏–±–∫–∞: {e}")
            # –û—Å—Ç–∞–≤–ª—è–µ–º is_completed = false –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑
            
    print(f"\n--- ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£—Å–ø–µ—à–Ω–æ: {successful_sends} –∏–∑ {len(pending_actions)} ---")
    print("-" * 50)