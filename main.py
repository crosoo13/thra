import asyncio
from telethon.sync import TelegramClient
from telethon.sessions import StringSession

from components import config
from components import database_manager as db
from components import telegram_processor
from components import sender_service

async def main():
	if not db.is_agent_active():
		return

	print("\n--- ‚ú® –ó–ê–ü–£–°–ö HR VISION AGENT ‚ú® ---\n")
	
	prompt_name = "hr_assistant_prompt"
	prompt_template = db.get_prompt_template(prompt_name)
	if not prompt_template:
		return

	session_string = db.get_session_string()
	
	print("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
	try:
		async with TelegramClient(StringSession(session_string), config.TELEGRAM_API_ID, config.TELEGRAM_API_HASH) as client:
			print("‚úÖ –ö–ª–∏–µ–Ω—Ç Telegram —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
			
			if not await client.is_user_authorized():
				print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏.")
				return

			me = await client.get_me()
			my_id = me.id
			print(f"‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –æ—Ç –∏–º–µ–Ω–∏: {me.first_name} (ID: {my_id})")

			await sender_service.send_pending_messages(client)
			
			target_chats = db.get_target_chats()
			if not target_chats:
				print("‚ÑπÔ∏è –¶–µ–ª–µ–≤—ã–µ —á–∞—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
				return

			print("\n--- üöÄ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–∞—Ç–æ–≤ ---")
			for chat_info in target_chats:
				await telegram_processor.process_chat(client, chat_info, prompt_template, prompt_name, my_id)
			
			print("\n--- ‚úÖ –í—Å–µ —á–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã ---\n")

	except Exception as e:
		print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main: {e}")

if __name__ == "__main__":
	try:
		config.validate_config()
		asyncio.run(main())
	except ValueError as e:
		print(e)
	except Exception as e:
		print(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")