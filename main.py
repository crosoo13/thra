import asyncio
from telethon.sync import TelegramClient
from telethon.sessions import StringSession

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
from components import config
from components import database_manager as db
from components import telegram_processor
from components import sender_service

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–≥–µ–Ω—Ç–∞."""
    print("\n--- ‚ú® –ó–ê–ü–£–°–ö HR VISION AGENT ‚ú® ---\n")
    
    # 1. –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    prompt_name = "hr_assistant_prompt"
    prompt_template = db.get_prompt_template(prompt_name)
    if not prompt_template:
        return

    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ Telegram –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    session_string = db.get_session_string()
    
    # 3. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram –∏ –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    print("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
    try:
        async with TelegramClient(StringSession(session_string), config.TELEGRAM_API_ID, config.TELEGRAM_API_HASH) as client:
            print("‚úÖ –ö–ª–∏–µ–Ω—Ç Telegram —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
            
            if not await client.is_user_authorized():
                print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏.")
                return

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ, —á—Ç–æ–±—ã –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            me = await client.get_me()
            my_id = me.id
            print(f"‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –æ—Ç –∏–º–µ–Ω–∏: {me.first_name} (ID: {my_id})")

            # 4. –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ–∂–∏–¥–∞—é—â–∏–µ –≤ –æ—á–µ—Ä–µ–¥–∏
            await sender_service.send_pending_messages(client)
            
            # 5. –ó–∞—Ç–µ–º –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–≤—ã—Ö —á–∞—Ç–æ–≤ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            target_chats = db.get_target_chats()
            if not target_chats:
                print("‚ÑπÔ∏è –¶–µ–ª–µ–≤—ã–µ —á–∞—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
                return

            print("\n--- üöÄ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–∞—Ç–æ–≤ ---")
            for chat_info in target_chats:
                # –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞—à ID –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, —á—Ç–æ–±—ã –æ–Ω —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–ª –Ω–∞—à–∏ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                await telegram_processor.process_chat(client, chat_info, prompt_template, prompt_name, my_id)
            
            print("\n--- ‚úÖ –í—Å–µ —á–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã ---\n")

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main: {e}")

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
if __name__ == "__main__":
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        config.validate_config()
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é main
        asyncio.run(main())
    except ValueError as e:
        print(e)
    except Exception as e:
        print(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")